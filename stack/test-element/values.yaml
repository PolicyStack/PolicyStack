# values.yaml for sample-element
# @description: Comprehensive PolicyStack element for cluster security, compliance, and governance

stack:
  # @description: Sample element demonstrating all policy types and documentation features
  testElement:
    # @desc: Master control to enable/disable all policies in this element
    enable: false
    
    # @description: Default configuration applied to all policies unless explicitly overridden
    defaultPolicy:
      # @desc: Categories for organizing policies in ACM console and reports
      categories:
        - CM Configuration Management
        - SC System and Communications Protection
      # @desc: Specific security controls addressed by these policies
      controls:
        - CM-2 Baseline Configuration
        - SC-4 Information in Shared Resources
      # @desc: Compliance standards and frameworks
      standards:
        - NIST SP 800-53
        - CIS Benchmark
        - PCI DSS
      # @desc: Default severity for policy violations (low/medium/high/critical)
      severity: medium
      # @desc: Default action when violations detected (inform/enforce)
      remediationAction: inform
      # @desc: Whether policies start disabled in ACM (useful for testing)
      disabled: false
    
    # @description: Main policy definitions that group related configurations and operators
    policies:
      # @description: Core security policy enforcing baseline security standards
      - name: baseline-security
        # @desc: Enable this policy and all its sub-policies
        enabled: true
        # @desc: Namespace where the policy will be created
        namespace: open-cluster-management
        description: "Enforces baseline security controls and configurations"
        # @desc: Override default categories for this specific policy
        categories:
          - SI System and Information Integrity
          - CM Configuration Management
        # @desc: Security controls this policy addresses
        controls:
          - SI-4 Information System Monitoring
          - CM-2 Baseline Configuration
          - CM-6 Configuration Settings
        # @desc: Compliance frameworks satisfied by this policy
        standards:
          - NIST SP 800-53
          - NIST SP 800-171
        # @desc: Automatically remediate violations
        remediationAction: enforce
        # @desc: Critical priority for security team review
        severity: high
        # @desc: Policy is active immediately upon deployment
        disabled: false
      
      # @description: Network security policy for traffic control and segmentation
      - name: network-security
        # @desc: Enable network security controls
        enabled: true
        namespace: open-cluster-management
        description: "Controls network access, segmentation, and traffic policies"
        categories:
          - SC System and Communications Protection
        controls:
          - SC-7 Boundary Protection
          - SC-8 Transmission Confidentiality
        standards:
          - NIST SP 800-53
        # @desc: Only report violations, don't auto-fix network policies
        remediationAction: inform
        # @desc: Medium priority as network is already segmented
        severity: medium
        disabled: false
      
      # @description: Compliance scanning and reporting policy
      - name: compliance-scanning
        # @desc: Enable compliance scanning features
        enabled: true
        namespace: open-cluster-management
        description: "Manages compliance scanning and audit requirements"
        categories:
          - AU Audit and Accountability
          - CA Security Assessment
        controls:
          - AU-2 Audit Events
          - CA-2 Security Assessments
          - CA-7 Continuous Monitoring
        standards:
          - NIST SP 800-53
          - FedRAMP
        remediationAction: inform
        severity: medium
        disabled: false
      
      # @description: Resource management and quota enforcement policy
      - name: resource-management
        # @desc: Enable resource quota and limit enforcement
        enabled: true
        namespace: open-cluster-management
        description: "Enforces resource quotas, limits, and capacity management"
        categories:
          - SC System and Communications Protection
        controls:
          - SC-5 Denial of Service Protection
          - SC-6 Resource Availability
        standards:
          - NIST SP 800-53
        # @desc: Enforce quotas to prevent resource exhaustion
        remediationAction: enforce
        severity: medium
        disabled: false
    
    # @description: Configuration policies that define specific Kubernetes resources and settings
    configPolicies:
      # @description: Enforces NetworkPolicy presence in all application namespaces
      - name: require-network-policies
        # @desc: Enable NetworkPolicy enforcement
        enabled: true
        description: "Ensures all namespaces have NetworkPolicies defined"
        # @desc: Links to the network-security parent policy
        policyRef: network-security
        # @desc: High severity for production namespaces
        severity: high
        # @desc: Automatically create default policies if missing
        remediationAction: enforce
        # @desc: Resources must exist and match specifications
        complianceType: musthave
        # @desc: Custom compliance status messages
        customMessage:
          # @desc: Message shown when namespace is compliant
          compliant: "NetworkPolicies are properly configured"
          # @desc: Message shown when namespace is non-compliant
          noncompliant: "NetworkPolicies are missing or misconfigured"
        # @desc: Evaluation schedule for policy checks
        evaluationInterval:
          # @desc: Check compliant namespaces every 30 minutes
          compliant: "30m"
          # @desc: Check non-compliant namespaces every 5 minutes
          noncompliant: "5m"
        # @desc: Target specific namespaces for this policy
        namespaceSelector:
          # @desc: Match namespaces by labels
          matchLabels:
            # @desc: Only production namespaces
            environment: production
            # @desc: Must be labeled for network policy management
            network-policy-required: "true"
          # @desc: Additional expression-based selectors
          matchExpressions:
            # @desc: Exclude system namespaces
            - key: kubernetes.io/metadata.name
              operator: NotIn
              values: ["kube-system", "kube-public", "kube-node-lease"]
        # @description: Template files containing the actual NetworkPolicy definitions
        templateNames:
          # @desc: Default deny-all ingress policy for namespace isolation
          - name: deny-all-ingress
            # @desc: Must have this exact policy
            complianceType: musthave
            # @desc: Include metadata in compliance check
            metadataComplianceType: musthave
          # @desc: Allow ingress from same namespace only
          - name: allow-same-namespace
            complianceType: musthave
          # @desc: Allow specific egress to external services
          - name: controlled-egress
            complianceType: musthave
            # @desc: Record differences in policy status
            recordDiff: Log
        # @desc: Enable parameter substitution in templates
        enableTemplateParameters: true
        # @description: Parameters passed to NetworkPolicy templates
        templateParameters:
          # @desc: Allow traffic from ingress controllers
          allowIngressController: true
          # @desc: Specific ingress controller namespace
          ingressNamespace: openshift-ingress
          # @desc: Allow DNS resolution
          allowDNS: true
          # @desc: DNS service namespace
          dnsNamespace: openshift-dns
          # @desc: List of allowed external endpoints
          allowedExternalCIDRs:
            - 10.0.0.0/8
            - 172.16.0.0/12
      
      # @description: Enforces pod security standards using Pod Security Admission
      - name: pod-security-standards
        # @desc: Enable pod security enforcement
        enabled: true
        description: "Configures Pod Security Standards for namespaces"
        policyRef: baseline-security
        severity: high
        remediationAction: enforce
        complianceType: musthave
        # @desc: Don't process templates in the policy itself
        disableTemplating: false
        # @desc: Target all non-system namespaces
        namespaceSelector:
          matchExpressions:
            - key: pod-security.kubernetes.io/enforce
              operator: Exists
        templateNames:
          # @desc: Configure namespace labels for PSA
          - name: namespace-psa-labels
        enableTemplateParameters: true
        templateParameters:
          # @desc: Enforcement level (privileged/baseline/restricted)
          enforceLevel: baseline
          # @desc: Version of pod security standards to use
          enforceVersion: v1.29
          # @desc: Audit violations at this level
          auditLevel: restricted
          # @desc: Warn about violations at this level
          warnLevel: restricted
          # @desc: Exempted namespaces that need privileged access
          exemptNamespaces:
            - kube-system
            - openshift-*
      
      # @description: Resource quota enforcement for namespace resource limits
      - name: namespace-resource-quotas
        # @desc: Enable quota enforcement
        enabled: true
        description: "Enforces resource quotas on application namespaces"
        policyRef: resource-management
        severity: medium
        remediationAction: enforce
        complianceType: musthave
        namespaceSelector:
          matchLabels:
            # @desc: Only namespaces that require quotas
            quota-required: "true"
        templateNames:
          # @desc: CPU and memory quotas
          - name: compute-quota
          # @desc: Storage quotas for PVCs
          - name: storage-quota
          # @desc: Object count quotas
          - name: object-quota
        enableTemplateParameters: true
        templateParameters:
          # @desc: Maximum CPU cores per namespace
          cpuLimit: "10"
          # @desc: Maximum memory per namespace
          memoryLimit: "20Gi"
          # @desc: Maximum storage per namespace
          storageLimit: "100Gi"
          # @desc: Maximum number of pods
          podCount: "50"
          # @desc: Maximum number of services
          serviceCount: "10"
          # @desc: Maximum number of PVCs
          pvcCount: "20"
      
      # @description: RBAC configuration for least-privilege access control
      - name: rbac-configuration
        # @desc: Enable RBAC policies
        enabled: true
        description: "Configures RBAC rules and restrictions"
        policyRef: baseline-security
        severity: high
        remediationAction: inform
        complianceType: mustnothave
        templateNames:
          # @desc: Prevent use of cluster-admin role
          - name: restrict-cluster-admin
            # @desc: Must not have these bindings
            complianceType: mustnothave
          # @desc: Restrict wildcard permissions
          - name: no-wildcard-verbs
            complianceType: mustnothave
        enableTemplateParameters: true
        templateParameters:
          # @desc: Allowed service accounts for admin access
          allowedAdminAccounts:
            - system:admin
            - system:serviceaccount:openshift-gitops:argocd-cluster-argocd-server
          # @desc: Maximum role bindings per namespace
          maxRoleBindings: 20
      
      # @description: Container image security and registry policies
      - name: image-security
        # @desc: Enable image security checks
        enabled: true
        description: "Enforces container image security policies"
        policyRef: baseline-security
        severity: high
        remediationAction: enforce
        complianceType: musthave
        templateNames:
          # @desc: Require image signatures
          - name: image-signature-policy
          # @desc: Enforce registry allowlist
          - name: allowed-registries
          # @desc: Require specific image tags (no latest)
          - name: image-tag-policy
        enableTemplateParameters: true
        templateParameters:
          # @desc: List of trusted image registries
          allowedRegistries:
            - registry.redhat.io
            - quay.io/openshift
            - gcr.io/distroless
          # @desc: Require image signatures
          requireSignatures: true
          # @desc: Blocked image tags
          blockedTags:
            - latest
            - edge
            - nightly
    
    # @description: Operator policies for managing OpenShift/Kubernetes operators
    operatorPolicies:
      # @description: OpenShift Compliance Operator for continuous compliance scanning
      - name: compliance-operator
        # @desc: Deploy the compliance operator
        enabled: true
        description: "Manages OpenShift Compliance Operator for CIS and NIST scanning"
        # @desc: Human-friendly display name in ACM
        displayName: "Compliance Operator"
        # @desc: Links to compliance-scanning parent policy
        policyRef: compliance-scanning
        # @desc: High priority for compliance requirements
        severity: high
        # @desc: Automatically install and configure
        remediationAction: enforce
        # @desc: Operator must be present
        complianceType: musthave
        # @desc: Target namespace for operator installation
        namespace: openshift-compliance
        # @description: Operator group configuration for OLM
        operatorGroup:
          # @desc: Name of the operator group resource
          name: compliance-operator-group
          # @desc: Specific namespaces the operator will manage
          targetNamespaces:
            - openshift-compliance
        # @description: Subscription details for operator catalog
        subscription:
          # @desc: Update channel (stable/fast/candidate)
          channel: stable
          # @desc: Operator package name in catalog
          name: compliance-operator
          # @desc: Catalog source name
          source: redhat-operators
          # @desc: Namespace containing the catalog
          sourceNamespace: openshift-marketplace
          # @desc: Initial CSV version to install
          startingCSV: compliance-operator.v1.5.0
          # @description: Additional operator configuration
          config:
            # @desc: Environment variables for the operator
            env:
              # @desc: Log verbosity level
              - name: LOG_LEVEL
                value: "info"
              # @desc: Enable debug mode
              - name: DEBUG
                value: "false"
            # @desc: Pod tolerations for operator placement
            tolerations:
              # @desc: Allow on master nodes
              - key: node-role.kubernetes.io/master
                value: ""
                effect: NoSchedule
              # @desc: Allow on infra nodes
              - key: node-role.kubernetes.io/infra
                value: ""
                effect: NoSchedule
            # @desc: Resource limits and requests
            resources:
              limits:
                # @desc: Maximum CPU allocation
                cpu: "500m"
                # @desc: Maximum memory allocation
                memory: "512Mi"
              requests:
                # @desc: Guaranteed CPU allocation
                cpu: "100m"
                # @desc: Guaranteed memory allocation
                memory: "128Mi"
        # @desc: Approval strategy for operator updates (Automatic/Manual)
        upgradeApproval: Automatic
        # @description: Approved versions for controlled operator upgrades
        versions:
          # @desc: Initial GA release with core features
          - compliance-operator.v1.5.0
          # @desc: Bug fix release for scan performance
          - compliance-operator.v1.5.1
          # @desc: Minor update with new CIS benchmarks
          - compliance-operator.v1.5.2
          # @desc: Feature release with enhanced reporting
          - compliance-operator.v1.6.0
      
      # @description: Advanced Cluster Security (ACS/RHACS) for runtime security
      - name: acs-operator
        # @desc: Deploy ACS for runtime security
        enabled: true
        description: "Runtime security and threat detection with ACS"
        displayName: "Advanced Cluster Security"
        policyRef: baseline-security
        severity: high
        remediationAction: enforce
        complianceType: musthave
        namespace: rhacs-operator
        operatorGroup:
          # @desc: Operator group name
          name: rhacs-operator-group
          # @desc: Watch all namespaces (empty = all)
          targetNamespaces: []
        subscription:
          channel: stable
          name: rhacs-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
          # @desc: Specific version for consistency
          startingCSV: rhacs-operator.v4.4.0
          config:
            # @desc: Node selector for operator pods
            nodeSelector:
              # @desc: Run on infra nodes
              node-role.kubernetes.io/infra: ""
            resources:
              limits:
                cpu: "1000m"
                memory: "1Gi"
              requests:
                cpu: "250m"
                memory: "256Mi"
        # @desc: Manual approval for major version changes
        upgradeApproval: Manual
        versions:
          - rhacs-operator.v4.4.0
          - rhacs-operator.v4.4.1
          - rhacs-operator.v4.4.2
      
      # @description: OpenShift GitOps (ArgoCD) for continuous deployment
      - name: openshift-gitops
        # @desc: Deploy GitOps operator
        enabled: true
        description: "GitOps operator for declarative continuous deployment"
        displayName: "OpenShift GitOps"
        policyRef: baseline-security
        severity: medium
        remediationAction: enforce
        complianceType: musthave
        namespace: openshift-gitops-operator
        operatorGroup:
          name: openshift-gitops-group
        subscription:
          channel: latest
          name: openshift-gitops-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
          config:
            # @desc: Environment configuration
            env:
              # @desc: Default ArgoCD admin password (should be changed)
              - name: ARGOCD_ADMIN_PASSWORD
                value: "changeme"
              # @desc: Enable automatic cluster configuration
              - name: DISABLE_DEFAULT_ARGOCD
                value: "false"
        upgradeApproval: Automatic
      
      # @description: Monitoring and alerting operator configuration
      - name: monitoring-operator
        # @desc: Configure cluster monitoring
        enabled: true
        description: "Configures Prometheus monitoring and alerting"
        displayName: "Cluster Monitoring"
        policyRef: compliance-scanning
        severity: medium
        remediationAction: inform
        complianceType: musthave
        namespace: openshift-monitoring
        # @desc: Skip operator group as it's pre-installed
        operatorGroup:
          name: openshift-monitoring-group
        subscription:
          channel: stable
          name: cluster-monitoring-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
          config:
            # @desc: Retention period for metrics
            env:
              - name: RETENTION_PERIOD
                value: "15d"
            # @desc: Storage configuration for Prometheus
            volumes:
              # @desc: PVC for metric storage
              - name: prometheus-storage
                persistentVolumeClaim:
                  claimName: prometheus-data
        upgradeApproval: Manual
    
    # @description: Certificate policies for TLS certificate management and compliance
    certificatePolicies:
      # @description: Monitor certificate expiration across all namespaces
      - name: cert-expiry-monitoring
        # @desc: Enable certificate monitoring
        enabled: true
        description: "Monitors TLS certificates for expiration"
        # @desc: Links to baseline security policy
        policyRef: baseline-security
        # @desc: Only inform about expiring certificates
        remediationAction: inform
        # @desc: Medium severity for expiring certs
        severity: medium
        # @desc: Alert when certs expire within 30 days (720 hours)
        minimumDuration: 720
        # @desc: Alert when CA certs expire within 90 days
        minimumCADuration: 2160
        # @desc: Flag certs valid longer than 1 year as non-compliant
        maximumDuration: 8760
        # @desc: Flag CA certs valid longer than 5 years
        maximumCADuration: 43800
        # @desc: Select all namespaces with TLS secrets
        namespaceSelector:
          matchExpressions:
            # @desc: Include all namespaces except system
            - key: kubernetes.io/metadata.name
              operator: NotIn
              values: ["kube-system", "kube-public"]
        # @desc: Select certificates by labels
        labelSelector:
          # @desc: Only check production certificates
          matchLabels:
            cert-manager.io/certificate-name: "*"
            environment: production
        # @desc: Regex for allowed Subject Alternative Names
        allowedSANPattern: '^([a-zA-Z0-9-]+\.)*example\.com$'
        # @desc: Disallow wildcard certificates in production
        disallowedSANPattern: '^\*\.'
      
      # @description: Ensure proper certificate chain validation
      - name: cert-chain-validation
        # @desc: Enable chain validation
        enabled: true
        description: "Validates certificate chains and CA trust"
        policyRef: baseline-security
        remediationAction: inform
        severity: high
        # @desc: Minimum 90 days validity
        minimumDuration: 2160
        # @desc: Check ingress certificates
        namespaceSelector:
          matchLabels:
            name: openshift-ingress
        # @desc: Process certificate templates
        disableTemplating: false
    
    # @description: PolicySets for grouping related policies for easier management
    policySets:
      # @description: Baseline security controls required for all clusters
      - name: security-baseline
        # @desc: Enable this policy set
        enabled: true
        description: "Groups all baseline security policies"
        # @desc: Policies included in this set
        policies:
          - baseline-security
          - network-security
      
      # @description: Compliance and audit policy group
      - name: compliance-audit
        # @desc: Enable compliance policy set
        enabled: true
        description: "Groups compliance and audit policies"
        policies:
          - compliance-scanning
      
      # @description: Resource management and capacity planning policies
      - name: resource-controls
        # @desc: Enable resource control policies
        enabled: true
        description: "Groups resource and capacity management policies"
        policies:
          - resource-management
      
      # @description: Full security stack for production clusters
      - name: production-security
        # @desc: Enable for production clusters only
        enabled: false
        description: "Complete security policy set for production"
        # @desc: Comprehensive list for production
        policies:
          - baseline-security
          - network-security
          - compliance-scanning
          - resource-management
