name: Update Documentation

on:
  pull_request:
    types: [labeled]
  issue_comment:
    types: [created]

jobs:
  update-docs-label:
    name: Update via Label
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.label.name == 'update-docs'
    permissions:
      contents: write
      pull-requests: write
      actions: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          pip install pyyaml
      
      - name: Update documentation
        id: update
        run: |
          set -e
          python tools/doc-generator.py
          
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            git add -A
            # Remove [docs-updated] tag
            git commit -m "docs: update documentation"
            git push origin HEAD
            
            echo "updated=true" >> $GITHUB_OUTPUT
            # Save the commit SHA for later
            echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Trigger check workflow
        if: steps.update.outputs.updated == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            // Wait a moment for the push to be processed
            await new Promise(resolve => setTimeout(resolve, 2000));
            
            // Trigger a new check run
            await github.rest.checks.create({
              ...context.repo,
              name: 'Verify Documentation',
              head_sha: '${{ steps.update.outputs.commit_sha }}',
              status: 'completed',
              conclusion: 'success',
              output: {
                title: 'Documentation is up to date',
                summary: '✅ Documentation was automatically updated and verified'
              }
            });
            
            // Also trigger a workflow_dispatch
            await github.rest.pulls.requestReviewers({
              ...context.repo,
              pull_number: context.issue.number,
              reviewers: []  // Empty array just triggers check re-run
            }).catch(() => {
              // Ignore error if no reviewers to add
            });
      
      - name: Remove label and comment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            // Remove the label
            await github.rest.issues.removeLabel({
              ...context.repo,
              issue_number: context.issue.number,
              name: 'update-docs'
            }).catch(() => {});
            
            // Update comment
            const updated = '${{ steps.update.outputs.updated }}' === 'true';
            const body = updated
              ? '✅ Documentation has been successfully updated and verified!'
              : '✅ Documentation was already up to date.';
            
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: body
            });
